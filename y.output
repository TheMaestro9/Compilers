Terminals unused in grammar

   FLOATNUM
   VOID


Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | /* empty */

    4 stmt: ';'
    5     | expr ';'
    6     | PRINT expr ';'
    7     | VARIABLE '=' expr ';'
    8     | WHILE '(' expr ')' stmt
    9     | IF '(' expr ')' stmt
   10     | IF '(' expr ')' stmt ELSE stmt
   11     | '{' stmt_list '}'
   12     | FOR '(' stmt ')'
   13     | declare ';'
   14     | declare '=' expr ';'

   15 stmt_list: stmt
   16          | stmt_list stmt

   17 expr: INTEGER
   18     | VARIABLE
   19     | '-' expr
   20     | expr '+' expr
   21     | expr '-' expr
   22     | expr '*' expr
   23     | expr '/' expr
   24     | expr '<' expr
   25     | expr '>' expr
   26     | expr GE expr
   27     | expr LE expr
   28     | expr NE expr
   29     | expr EQ expr
   30     | expr AND expr
   31     | expr OR expr
   32     | NOT expr
   33     | '(' expr ')'
   34     | VARIABLE INCREMENT
   35     | VARIABLE DECREMENT

   36 declare: FLOAT VARIABLE
   37        | INT VARIABLE
   38        | BOOL VARIABLE
   39        | DOUBLE VARIABLE
   40        | LONG VARIABLE


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 9 10 12 33
')' (41) 8 9 10 12 33
'*' (42) 22
'+' (43) 20
'-' (45) 19 21
'/' (47) 23
';' (59) 4 5 6 7 13 14
'<' (60) 24
'=' (61) 7 14
'>' (62) 25
'{' (123) 11
'}' (125) 11
error (256)
INTEGER (258) 17
FLOATNUM (259)
VARIABLE (260) 7 18 34 35 36 37 38 39 40
WHILE (261) 8
FOR (262) 12
IF (263) 9 10
PRINT (264) 6
INCREMENT (265) 34
DECREMENT (266) 35
INT (267) 37
FLOAT (268) 36
LONG (269) 40
BOOL (270) 38
DOUBLE (271) 39
VOID (272)
IFX (273)
ELSE (274) 10
OR (275) 31
AND (276) 30
NOT (277) 32
NE (278) 28
EQ (279) 29
LE (280) 27
GE (281) 26
UMINUS (282)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
function (42)
    on left: 2 3, on right: 1 2
stmt (43)
    on left: 4 5 6 7 8 9 10 11 12 13 14, on right: 2 8 9 10 12 15 16
stmt_list (44)
    on left: 15 16, on right: 11 16
expr (45)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
    35, on right: 5 6 7 8 9 10 14 19 20 21 22 23 24 25 26 27 28 29
    30 31 32 33
declare (46)
    on left: 36 37 38 39 40, on right: 13 14


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (function)

    program   go to state 1
    function  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: function .
    2 function: function . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    FOR       shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    INT       shift, and go to state 10
    FLOAT     shift, and go to state 11
    LONG      shift, and go to state 12
    BOOL      shift, and go to state 13
    DOUBLE    shift, and go to state 14
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    ';'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19

    $default  reduce using rule 1 (program)

    stmt     go to state 20
    expr     go to state 21
    declare  go to state 22


State 3

    0 $accept: program $end .

    $default  accept


State 4

   17 expr: INTEGER .

    $default  reduce using rule 17 (expr)


State 5

    7 stmt: VARIABLE . '=' expr ';'
   18 expr: VARIABLE .
   34     | VARIABLE . INCREMENT
   35     | VARIABLE . DECREMENT

    INCREMENT  shift, and go to state 23
    DECREMENT  shift, and go to state 24
    '='        shift, and go to state 25

    $default  reduce using rule 18 (expr)


State 6

    8 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 26


State 7

   12 stmt: FOR . '(' stmt ')'

    '('  shift, and go to state 27


State 8

    9 stmt: IF . '(' expr ')' stmt
   10     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 28


State 9

    6 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 30


State 10

   37 declare: INT . VARIABLE

    VARIABLE  shift, and go to state 31


State 11

   36 declare: FLOAT . VARIABLE

    VARIABLE  shift, and go to state 32


State 12

   40 declare: LONG . VARIABLE

    VARIABLE  shift, and go to state 33


State 13

   38 declare: BOOL . VARIABLE

    VARIABLE  shift, and go to state 34


State 14

   39 declare: DOUBLE . VARIABLE

    VARIABLE  shift, and go to state 35


State 15

   19 expr: '-' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 36


State 16

   32 expr: NOT . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 37


State 17

    4 stmt: ';' .

    $default  reduce using rule 4 (stmt)


State 18

   33 expr: '(' . expr ')'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 38


State 19

   11 stmt: '{' . stmt_list '}'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    FOR       shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    INT       shift, and go to state 10
    FLOAT     shift, and go to state 11
    LONG      shift, and go to state 12
    BOOL      shift, and go to state 13
    DOUBLE    shift, and go to state 14
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    ';'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19

    stmt       go to state 39
    stmt_list  go to state 40
    expr       go to state 21
    declare    go to state 22


State 20

    2 function: function stmt .

    $default  reduce using rule 2 (function)


State 21

    5 stmt: expr . ';'
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    OR   shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    AND  shift, and go to state 46
    '>'  shift, and go to state 47
    '<'  shift, and go to state 48
    NE   shift, and go to state 49
    EQ   shift, and go to state 50
    LE   shift, and go to state 51
    GE   shift, and go to state 52
    ';'  shift, and go to state 53


State 22

   13 stmt: declare . ';'
   14     | declare . '=' expr ';'

    ';'  shift, and go to state 54
    '='  shift, and go to state 55


State 23

   34 expr: VARIABLE INCREMENT .

    $default  reduce using rule 34 (expr)


State 24

   35 expr: VARIABLE DECREMENT .

    $default  reduce using rule 35 (expr)


State 25

    7 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 56


State 26

    8 stmt: WHILE '(' . expr ')' stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 57


State 27

   12 stmt: FOR '(' . stmt ')'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    FOR       shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    INT       shift, and go to state 10
    FLOAT     shift, and go to state 11
    LONG      shift, and go to state 12
    BOOL      shift, and go to state 13
    DOUBLE    shift, and go to state 14
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    ';'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19

    stmt     go to state 58
    expr     go to state 21
    declare  go to state 22


State 28

    9 stmt: IF '(' . expr ')' stmt
   10     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 59


State 29

   18 expr: VARIABLE .
   34     | VARIABLE . INCREMENT
   35     | VARIABLE . DECREMENT

    INCREMENT  shift, and go to state 23
    DECREMENT  shift, and go to state 24

    $default  reduce using rule 18 (expr)


State 30

    6 stmt: PRINT expr . ';'
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    OR   shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    AND  shift, and go to state 46
    '>'  shift, and go to state 47
    '<'  shift, and go to state 48
    NE   shift, and go to state 49
    EQ   shift, and go to state 50
    LE   shift, and go to state 51
    GE   shift, and go to state 52
    ';'  shift, and go to state 60


State 31

   37 declare: INT VARIABLE .

    $default  reduce using rule 37 (declare)


State 32

   36 declare: FLOAT VARIABLE .

    $default  reduce using rule 36 (declare)


State 33

   40 declare: LONG VARIABLE .

    $default  reduce using rule 40 (declare)


State 34

   38 declare: BOOL VARIABLE .

    $default  reduce using rule 38 (declare)


State 35

   39 declare: DOUBLE VARIABLE .

    $default  reduce using rule 39 (declare)


State 36

   19 expr: '-' expr .
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 37

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr
   32     | NOT expr .

    '>'  shift, and go to state 47
    '<'  shift, and go to state 48
    NE   shift, and go to state 49
    EQ   shift, and go to state 50
    LE   shift, and go to state 51
    GE   shift, and go to state 52

    $default  reduce using rule 32 (expr)


State 38

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr
   33     | '(' expr . ')'

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    OR   shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    AND  shift, and go to state 46
    '>'  shift, and go to state 47
    '<'  shift, and go to state 48
    NE   shift, and go to state 49
    EQ   shift, and go to state 50
    LE   shift, and go to state 51
    GE   shift, and go to state 52
    ')'  shift, and go to state 61


State 39

   15 stmt_list: stmt .

    $default  reduce using rule 15 (stmt_list)


State 40

   11 stmt: '{' stmt_list . '}'
   16 stmt_list: stmt_list . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    FOR       shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    INT       shift, and go to state 10
    FLOAT     shift, and go to state 11
    LONG      shift, and go to state 12
    BOOL      shift, and go to state 13
    DOUBLE    shift, and go to state 14
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    ';'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19
    '}'       shift, and go to state 62

    stmt     go to state 63
    expr     go to state 21
    declare  go to state 22


State 41

   20 expr: expr '+' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 64


State 42

   21 expr: expr '-' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 65


State 43

   31 expr: expr OR . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 66


State 44

   22 expr: expr '*' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 67


State 45

   23 expr: expr '/' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 68


State 46

   30 expr: expr AND . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 69


State 47

   25 expr: expr '>' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 70


State 48

   24 expr: expr '<' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 71


State 49

   28 expr: expr NE . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 72


State 50

   29 expr: expr EQ . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 73


State 51

   27 expr: expr LE . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 74


State 52

   26 expr: expr GE . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 75


State 53

    5 stmt: expr ';' .

    $default  reduce using rule 5 (stmt)


State 54

   13 stmt: declare ';' .

    $default  reduce using rule 13 (stmt)


State 55

   14 stmt: declare '=' . expr ';'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 29
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    '('       shift, and go to state 18

    expr  go to state 76


State 56

    7 stmt: VARIABLE '=' expr . ';'
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    OR   shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    AND  shift, and go to state 46
    '>'  shift, and go to state 47
    '<'  shift, and go to state 48
    NE   shift, and go to state 49
    EQ   shift, and go to state 50
    LE   shift, and go to state 51
    GE   shift, and go to state 52
    ';'  shift, and go to state 77


State 57

    8 stmt: WHILE '(' expr . ')' stmt
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    OR   shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    AND  shift, and go to state 46
    '>'  shift, and go to state 47
    '<'  shift, and go to state 48
    NE   shift, and go to state 49
    EQ   shift, and go to state 50
    LE   shift, and go to state 51
    GE   shift, and go to state 52
    ')'  shift, and go to state 78


State 58

   12 stmt: FOR '(' stmt . ')'

    ')'  shift, and go to state 79


State 59

    9 stmt: IF '(' expr . ')' stmt
   10     | IF '(' expr . ')' stmt ELSE stmt
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    OR   shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    AND  shift, and go to state 46
    '>'  shift, and go to state 47
    '<'  shift, and go to state 48
    NE   shift, and go to state 49
    EQ   shift, and go to state 50
    LE   shift, and go to state 51
    GE   shift, and go to state 52
    ')'  shift, and go to state 80


State 60

    6 stmt: PRINT expr ';' .

    $default  reduce using rule 6 (stmt)


State 61

   33 expr: '(' expr ')' .

    $default  reduce using rule 33 (expr)


State 62

   11 stmt: '{' stmt_list '}' .

    $default  reduce using rule 11 (stmt)


State 63

   16 stmt_list: stmt_list stmt .

    $default  reduce using rule 16 (stmt_list)


State 64

   20 expr: expr . '+' expr
   20     | expr '+' expr .
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    AND  shift, and go to state 46
    '>'  shift, and go to state 47
    '<'  shift, and go to state 48
    NE   shift, and go to state 49
    EQ   shift, and go to state 50
    LE   shift, and go to state 51
    GE   shift, and go to state 52

    $default  reduce using rule 20 (expr)


State 65

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   21     | expr '-' expr .
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    AND  shift, and go to state 46
    '>'  shift, and go to state 47
    '<'  shift, and go to state 48
    NE   shift, and go to state 49
    EQ   shift, and go to state 50
    LE   shift, and go to state 51
    GE   shift, and go to state 52

    $default  reduce using rule 21 (expr)


State 66

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr
   31     | expr OR expr .

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    AND  shift, and go to state 46
    '>'  shift, and go to state 47
    '<'  shift, and go to state 48
    NE   shift, and go to state 49
    EQ   shift, and go to state 50
    LE   shift, and go to state 51
    GE   shift, and go to state 52

    $default  reduce using rule 31 (expr)


State 67

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   22     | expr '*' expr .
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr

    '>'  shift, and go to state 47
    '<'  shift, and go to state 48
    NE   shift, and go to state 49
    EQ   shift, and go to state 50
    LE   shift, and go to state 51
    GE   shift, and go to state 52

    $default  reduce using rule 22 (expr)


State 68

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   23     | expr '/' expr .
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr

    '>'  shift, and go to state 47
    '<'  shift, and go to state 48
    NE   shift, and go to state 49
    EQ   shift, and go to state 50
    LE   shift, and go to state 51
    GE   shift, and go to state 52

    $default  reduce using rule 23 (expr)


State 69

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   30     | expr AND expr .
   31     | expr . OR expr

    '>'  shift, and go to state 47
    '<'  shift, and go to state 48
    NE   shift, and go to state 49
    EQ   shift, and go to state 50
    LE   shift, and go to state 51
    GE   shift, and go to state 52

    $default  reduce using rule 30 (expr)


State 70

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   25     | expr '>' expr .
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr

    $default  reduce using rule 25 (expr)


State 71

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   24     | expr '<' expr .
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr

    $default  reduce using rule 24 (expr)


State 72

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   28     | expr NE expr .
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr

    $default  reduce using rule 28 (expr)


State 73

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   29     | expr EQ expr .
   30     | expr . AND expr
   31     | expr . OR expr

    $default  reduce using rule 29 (expr)


State 74

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   27     | expr LE expr .
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr

    $default  reduce using rule 27 (expr)


State 75

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   26     | expr GE expr .
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr

    $default  reduce using rule 26 (expr)


State 76

   14 stmt: declare '=' expr . ';'
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | expr . AND expr
   31     | expr . OR expr

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    OR   shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    AND  shift, and go to state 46
    '>'  shift, and go to state 47
    '<'  shift, and go to state 48
    NE   shift, and go to state 49
    EQ   shift, and go to state 50
    LE   shift, and go to state 51
    GE   shift, and go to state 52
    ';'  shift, and go to state 81


State 77

    7 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 7 (stmt)


State 78

    8 stmt: WHILE '(' expr ')' . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    FOR       shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    INT       shift, and go to state 10
    FLOAT     shift, and go to state 11
    LONG      shift, and go to state 12
    BOOL      shift, and go to state 13
    DOUBLE    shift, and go to state 14
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    ';'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19

    stmt     go to state 82
    expr     go to state 21
    declare  go to state 22


State 79

   12 stmt: FOR '(' stmt ')' .

    $default  reduce using rule 12 (stmt)


State 80

    9 stmt: IF '(' expr ')' . stmt
   10     | IF '(' expr ')' . stmt ELSE stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    FOR       shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    INT       shift, and go to state 10
    FLOAT     shift, and go to state 11
    LONG      shift, and go to state 12
    BOOL      shift, and go to state 13
    DOUBLE    shift, and go to state 14
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    ';'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19

    stmt     go to state 83
    expr     go to state 21
    declare  go to state 22


State 81

   14 stmt: declare '=' expr ';' .

    $default  reduce using rule 14 (stmt)


State 82

    8 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 8 (stmt)


State 83

    9 stmt: IF '(' expr ')' stmt .
   10     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 84

    $default  reduce using rule 9 (stmt)


State 84

   10 stmt: IF '(' expr ')' stmt ELSE . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    FOR       shift, and go to state 7
    IF        shift, and go to state 8
    PRINT     shift, and go to state 9
    INT       shift, and go to state 10
    FLOAT     shift, and go to state 11
    LONG      shift, and go to state 12
    BOOL      shift, and go to state 13
    DOUBLE    shift, and go to state 14
    '-'       shift, and go to state 15
    NOT       shift, and go to state 16
    ';'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19

    stmt     go to state 85
    expr     go to state 21
    declare  go to state 22


State 85

   10 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 10 (stmt)
